"use strict";(self.webpackChunken=self.webpackChunken||[]).push([[131],{37474:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var t=a(27875);const e=(0,t._)("h1",{id:"global-options",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#global-options","aria-hidden":"true"},"#"),(0,t.Uk)(" Global Options")],-1),o=(0,t._)("p",null,[(0,t.Uk)("We provide the "),(0,t._)("code",null,"setGlobalOptions()"),(0,t.Uk)(" method for you to control some configurations to avoid the repetition of filling in the same configurations.")],-1),p=(0,t._)("h2",{id:"cli",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#cli","aria-hidden":"true"},"#"),(0,t.Uk)(" CLI")],-1),c={href:"https://github.com/vuejs/vue-cli",target:"_blank",rel:"noopener noreferrer"},l={href:"https://github.com/vitejs/vite",target:"_blank",rel:"noopener noreferrer"},u=(0,t.uE)('<div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// main.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> setGlobalOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span>\n<span class="token function">setGlobalOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  manual<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// App.tsx</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>getUser<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> job <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>getJob<span class="token punctuation">,</span> <span class="token punctuation">{</span> manual<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Override global options</span>\n</code></pre></div><h3 id="inject-configuration-using-userequestprovider" tabindex="-1"><a class="header-anchor" href="#inject-configuration-using-userequestprovider" aria-hidden="true">#</a> Inject configuration using <code>useRequestProvider</code></h3><p>In addition to setting global configurations using the API as described above, you can also use the <code>useRequestProvider</code> hook we export for more fine-grained configuration. As shown below, you can pass different configurations to different components. <strong>The passed configuration will only affect the child components of that component.</strong></p><div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequestProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">useRequestProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      manual<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="cdn" tabindex="-1"><a class="header-anchor" href="#cdn" aria-hidden="true">#</a> CDN</h2><p>If you use VueRequest through a CDN, you can set global configurations as follows. We export the <code>setGlobalOptions()</code> method on the <code>VueRequest</code> instance.</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token comment">&lt;!-- ... --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/vue-request/dist/vue-request.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  VueRequest<span class="token punctuation">.</span><span class="token function">setGlobalOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">manual</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="custom-container tip"><p class="custom-container-title">Tips</p><p>Options weight: <code>setGlobalOptions</code> &lt; <code>useRequestProvider</code> &lt; <code>local options</code></p></div>',8),i={},r=(0,a(94407).Z)(i,[["render",function(n,s){const a=(0,t.up)("OutboundLink"),i=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,o,p,(0,t._)("blockquote",null,[(0,t._)("p",null,[(0,t.Uk)("For example, "),(0,t._)("a",c,[(0,t.Uk)("vue-cli"),(0,t.Wm)(a)]),(0,t.Uk)(", "),(0,t._)("a",l,[(0,t.Uk)("vite"),(0,t.Wm)(a)]),(0,t.Uk)(", etc.")])]),(0,t._)("p",null,[(0,t.Uk)("In the following example, all components that use VueRequest in the current project can access the incoming options. For more configurable global options, please refer to "),(0,t.Wm)(i,{to:"/api/global-options.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("Global Options")])),_:1}),(0,t.Uk)(".")]),u],64)}]])},39557:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-e7e57ac2",path:"/guide/documentation/globalOptions.html",title:"Global Options",lang:"en-US",frontmatter:{head:[["meta",{name:"og:title",content:"Global Options - VueRequest"}]]},excerpt:"",headers:[{level:2,title:"CLI",slug:"cli",children:[{level:3,title:"Inject configuration using useRequestProvider",slug:"inject-configuration-using-userequestprovider",children:[]}]},{level:2,title:"CDN",slug:"cdn",children:[]}],filePathRelative:"guide/documentation/globalOptions.md",git:{updatedTime:1686124925e3,contributors:[{name:"John",email:"John60676@qq.com",commits:1}]}}}}]);