"use strict";(self.webpackChunken=self.webpackChunken||[]).push([[671],{88590:(e,n,a)=>{a.r(n),a.d(n,{default:()=>ca});var t=a(27875);const s=(0,t.uE)('<h1 id="public-api" tabindex="-1"><a class="header-anchor" href="#public-api" aria-hidden="true">#</a> Public API</h1><p>VueRequest usually consists of three parts: <a href="#return-value">Return Values</a>, <a href="#service">Service</a>, and <a href="#options">Options</a></p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token operator">...</span>ReturnValues <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token punctuation">,</span> <span class="token constant">FR</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Service<span class="token punctuation">,</span> Options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TS Generic description</p><p><code>R</code> is a generic type of <a href="#data"><code>data</code></a>.</p><p><code>P</code> is a generic of <a href="#params"><code>params</code></a>. (<strong>Note:</strong> This generic is subject to <code>unknown[]</code> constraints)</p><p><code>FR</code> is the type of <code>data</code> returned by <a href="#formatresult"><code>formatResult</code></a>. (<strong>Note:</strong> The <code>R</code> generics mentioned in the following documents, after using <code>formatResult</code>, use <code>FR</code> instead)</p></div><h2 id="return-values" tabindex="-1"><a class="header-anchor" href="#return-values" aria-hidden="true">#</a> Return Values</h2><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><ul><li><p><strong>Type:</strong> <code>Ref&lt;R | undefined&gt;</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p><p>The data returned by request, if <a href="#formatresult">formatResult</a> is passed in, the data returned by request will be the formatted <code>data</code>.</p></li></ul><h3 id="loading" tabindex="-1"><a class="header-anchor" href="#loading" aria-hidden="true">#</a> loading</h3><ul><li><p><strong>Type:</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>Default:</strong> <code>false</code></p><p><a href="#service"><strong>Service</strong></a> The execution status of the request</p></li></ul>',9),l={id:"reloading",tabindex:"-1"},o=(0,t._)("a",{class:"header-anchor",href:"#reloading","aria-hidden":"true"},"#",-1),r=(0,t.Uk)(" reloading "),i=(0,t.uE)('<ul><li><p><strong>Type:</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>Default:</strong> <code>false</code></p><p>Is reloading, used to record whether <a href="#reload"><code>reload()</code></a> is triggering.</p></li></ul><h3 id="params" tabindex="-1"><a class="header-anchor" href="#params" aria-hidden="true">#</a> params</h3><ul><li><p><strong>Type:</strong> <code>Ref&lt;P[]&gt;</code></p></li><li><p><strong>Default:</strong> <code>[]</code></p><p><a href="#service"><strong>Service</strong></a> request parameters</p></li><li><p><strong>Usage:</strong></p></li></ul><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getUser</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;api/user?&#39;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> params<span class="token punctuation">,</span> run <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>getUser<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  defaultParams<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;John&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// In the default request, if defaultParams exists, params. the value will be equal to defaultParams. Otherwise, it will be an empty array.</span>\n\n<span class="token comment">// When run passes in parameters, the parameters at this time will be synchronized to params</span>\n<span class="token function">run</span><span class="token punctuation">(</span><span class="token string">&#39;Benny&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// params.value is [&#39;Benny&#39;]</span>\n</code></pre></div><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error" aria-hidden="true">#</a> error</h3><ul><li><p><strong>Type:</strong> <code>Ref&lt;Error | undefined&gt;</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p><p>If an error is thrown internally, it will be received by <code>error</code> and returned.</p></li></ul><h3 id="queries" tabindex="-1"><a class="header-anchor" href="#queries" aria-hidden="true">#</a> queries</h3>',7),p=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Type:"),(0,t.Uk)(),(0,t._)("code",null,"Queries<R, P>")])],-1),c=(0,t._)("p",null,[(0,t._)("strong",null,"Default:"),(0,t.Uk)(),(0,t._)("code",null,"Object")],-1),u=(0,t._)("p",null,[(0,t.Uk)("By default, the newly requested data will overwrite the old requested data. When "),(0,t._)("a",{href:"#querykey"},[(0,t._)("code",null,"queryKey()")]),(0,t.Uk)(" is enabled, "),(0,t._)("code",null,"queries"),(0,t.Uk)(" can store the results of multiple requests at the same time, achieving parallel effects")],-1),d={class:"custom-container tip"},h=(0,t._)("p",{class:"custom-container-title"},"Note",-1),g=(0,t._)("code",null,"queries",-1),k=(0,t.Uk)(" is a "),f={href:"https://v3.vuejs.org/api/basic-reactivity.html#reactive",target:"_blank",rel:"noopener noreferrer"},m=(0,t._)("code",null,"reactive",-1),_=(0,t.Uk)(" object"),y=(0,t.uE)('<p>The types of <code>Queries</code> are as follows.</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Queries<span class="token operator">&lt;</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  loading<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  data<span class="token operator">:</span> <span class="token constant">R</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n  error<span class="token operator">:</span> Error <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n  params<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">...</span>params<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">cancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">refresh</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">mutate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">arg</span><span class="token operator">:</span> <span class="token punctuation">(</span>oldData<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">R</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">|</span> <span class="token punctuation">(</span>newData<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',2),v=(0,t._)("strong",null,"See also:",-1),b=(0,t.Uk)(),w=(0,t.Uk)("Concurrent Request"),U=(0,t.uE)('<h3 id="run" tabindex="-1"><a class="header-anchor" href="#run" aria-hidden="true">#</a> run</h3><ul><li><p><strong>Type:</strong> <code>(...params: P[]) =&gt; Promise&lt;R&gt;</code></p><p>Manually trigger the request of <a href="#service"><strong>Service</strong></a></p><div class="custom-container tip"><p class="custom-container-title">Note</p><p>When <a href="#debounceinterval">debounceInterval</a> or <a href="#throttleinterval">throttleInterval</a> mode is enabled. The return result of <a href="#run"><code>run</code></a> may be <code>Promise&lt;null&gt;</code></p></div></li></ul><h3 id="cancel" tabindex="-1"><a class="header-anchor" href="#cancel" aria-hidden="true">#</a> cancel</h3><ul><li><p><strong>Type:</strong> <code>() =&gt; void</code></p><ul><li>Manually cancel the current request.</li><li>Pause <a href="#pollinginterval">polling</a>.</li></ul><div class="custom-container tip"><p class="custom-container-title">Note</p><p>The cancellation mentioned here is not a real stop request but cancels the assignment of <a href="#data">data</a> and resets <a href="#loading">loading</a> to <code>false</code>. <strong>The current request will not be interrupted.</strong></p></div></li></ul><h3 id="refresh" tabindex="-1"><a class="header-anchor" href="#refresh" aria-hidden="true">#</a> refresh</h3><ul><li><p><strong>Type:</strong> <code>() =&gt; Promise&lt;R&gt;</code></p><p>Recall <a href="#run">run</a> with the current <a href="#params">params</a>.</p></li></ul><h3 id="reload" tabindex="-1"><a class="header-anchor" href="#reload" aria-hidden="true">#</a> reload</h3><ul><li><p><strong>Type:</strong> <code>() =&gt; void</code></p><p>Used to clear <a href="#queries"><code>queries</code></a> data and all request status (including <a href="#data"><code>data</code></a>). If <a href="#manual"><code>manual</code></a> is <code>false</code>, <a href="#defaultparams"><code>defaultParams</code></a> will be used to trigger again <a href="#run"><code>run()</code></a>.</p></li></ul><h3 id="mutate" tabindex="-1"><a class="header-anchor" href="#mutate" aria-hidden="true">#</a> mutate</h3>',9),q=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Type:"),(0,t.Uk)(),(0,t._)("code",null,"(arg: (oldData: R) => R) => void | (newData: R) => void")]),(0,t._)("p",null,[(0,t.Uk)("Modify "),(0,t._)("a",{href:"#data"},"data"),(0,t.Uk)(" directly")])],-1),R=(0,t._)("strong",null,"See also:",-1),x=(0,t.Uk)(),D=(0,t.Uk)("Mutation"),T=(0,t._)("h2",{id:"service",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#service","aria-hidden":"true"},"#"),(0,t.Uk)(" Service")],-1),W=(0,t.Uk)("For the request. See also "),P=(0,t.Uk)("Data Fetching"),S=(0,t.uE)('<h3 id="request-method" tabindex="-1"><a class="header-anchor" href="#request-method" aria-hidden="true">#</a> Request Method</h3><ul><li><p><strong>Type:</strong></p><ul><li><code>(...params: P[]) =&gt; Promise&lt;R&gt;</code></li><li><code>| (...params: P[]) =&gt; string</code></li><li><code>| (...params: P[]) =&gt; ({ url: string; [key: string]: any; })</code></li></ul></li><li><p><strong>Details:</strong></p><p>You can pass in a function whose return value is <code>Promise</code>, <a href="#string">String</a> or <a href="#object">Object</a>. We recommend returning a <code>Promise</code> directly. You can use <strong>third-party request library</strong> (such as <code>axios</code>) to help you generate a <code>Promise</code> function for initiating a request to obtain resources.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;api/user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>getUser<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div></li></ul><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> String</h3>',3),I=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Type:"),(0,t.Uk)(),(0,t._)("code",null,"string")])],-1),E=(0,t._)("p",null,[(0,t._)("strong",null,"Details:")],-1),j=(0,t.Uk)("If you pass in a string or call it by returning a string from "),O=(0,t._)("a",{href:"#request-method"},"Request Method",-1),A=(0,t.Uk)(", then we will use the global "),F={href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",target:"_blank",rel:"noopener noreferrer"},B=(0,t._)("code",null,"fetch()",-1),C=(0,t.Uk)(" method to initiate a request to obtain resources, this string will be used as the "),M=(0,t._)("strong",null,"URL",-1),K=(0,t.Uk)(" for obtaining resources"),L=(0,t._)("h3",{id:"object",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#object","aria-hidden":"true"},"#"),(0,t.Uk)(" Object")],-1),z=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Type:"),(0,t.Uk)(),(0,t._)("code",null,"{ url: string; [key: string]: any; }")])],-1),V=(0,t._)("p",null,[(0,t._)("strong",null,"Details:")],-1),N=(0,t.Uk)("If you pass in an object or call it by returning an object via "),H=(0,t._)("a",{href:"#request-method"},"Request Method",-1),Y=(0,t.Uk)(", then we will use the global "),J={href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",target:"_blank",rel:"noopener noreferrer"},Q=(0,t._)("code",null,"fetch()",-1),G=(0,t.Uk)(" method to initiate a request for resources. The object must contain a key-value pair named "),X=(0,t._)("strong",null,"URL",-1),Z=(0,t.Uk)(", which will be used as the "),$=(0,t._)("strong",null,"URL",-1),ee=(0,t.Uk)(" for obtaining resources."),ne=(0,t._)("h2",{id:"options",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#options","aria-hidden":"true"},"#"),(0,t.Uk)(" Options")],-1),ae=(0,t._)("h3",{id:"loadingdelay",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#loadingdelay","aria-hidden":"true"},"#"),(0,t.Uk)(" loadingDelay")],-1),te=(0,t.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>0</code></p></li><li><p><strong>Details:</strong></p><p>By setting the delay in milliseconds, you can delay the time <a href="#loading"><strong>loading</strong></a> becomes <code>true</code>, effectively preventing flicker.</p></li>',3),se=(0,t._)("strong",null,"See also:",-1),le=(0,t.Uk)(),oe=(0,t.Uk)("Loading Delay"),re=(0,t._)("h3",{id:"pollinginterval",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#pollinginterval","aria-hidden":"true"},"#"),(0,t.Uk)(" pollingInterval")],-1),ie=(0,t.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><p>By setting the polling interval&#39;s millisecond value, you can enter the polling mode and trigger the request regularly. You can use <a href="#run"><code>run</code></a> / <a href="#cancel"><code>cancel</code></a> to <strong>enable</strong>/<strong>stop</strong> polling. When <a href="#manual"><code>manual</code></a> is set to <code>true</code>, you need to execute a <code>run</code> before starting polling manually.</p><ul><li>The interval value must be greater than <code>0</code> to take effect</li></ul></li>',3),pe=(0,t._)("strong",null,"See also:",-1),ce=(0,t.Uk)(),ue=(0,t.Uk)("Polling"),de=(0,t._)("h3",{id:"pollingwhenhidden",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#pollingwhenhidden","aria-hidden":"true"},"#"),(0,t.Uk)(" pollingWhenHidden")],-1),he=(0,t.uE)('<li><p><strong>Type:</strong> <code>boolean</code></p></li><li><p><strong>Default:</strong> <code>false</code></p></li><li><p><strong>Details:</strong></p><p>It takes effect when <a href="#pollingInterval"><code>pollingInterval</code></a> is greater than <code>0</code>. By default, polling will be suspended when the screen is not visible. When set to <code>true</code>, polling tasks will still be executed regularly when the screen is not visible.</p></li>',3),ge=(0,t._)("strong",null,"See also:",-1),ke=(0,t.Uk)(),fe=(0,t.Uk)("PollingWhenHidden"),me=(0,t._)("h3",{id:"pollingwhenoffline",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#pollingwhenoffline","aria-hidden":"true"},"#"),(0,t.Uk)(" pollingWhenOffline")],-1),_e=(0,t.uE)('<li><p><strong>Type:</strong> <code>boolean</code></p></li><li><p><strong>Default:</strong> <code>false</code></p></li><li><p><strong>Details:</strong></p><p>It takes effect when <a href="#pollingInterval"><code>pollingInterval</code></a> is greater than <code>0</code>. By default, polling will be suspended when the network is unavailable. When set to <code>true</code>, the polling task will still be executed regularly when the network is not available.</p></li>',3),ye=(0,t._)("strong",null,"See also:",-1),ve=(0,t.Uk)(),be=(0,t.Uk)("PollingWhenOffline"),we=(0,t._)("h3",{id:"debounceinterval",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#debounceinterval","aria-hidden":"true"},"#"),(0,t.Uk)(" debounceInterval")],-1),Ue=(0,t.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><p>Enter the debounce mode by setting the number of milliseconds to delay. At this time, if <a href="#run"><code>run</code></a> is triggered frequently, the request will be made with the debounce strategy.</p></li>',3),qe=(0,t._)("strong",null,"See also:",-1),Re=(0,t.Uk)(),xe=(0,t.Uk)("Debounce"),De=(0,t._)("h3",{id:"throttleinterval",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#throttleinterval","aria-hidden":"true"},"#"),(0,t.Uk)(" throttleInterval")],-1),Te=(0,t.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><p>Enter the throttling mode by setting the number of milliseconds for throttling. At this time, if <a href="#run"><code>run</code></a> is triggered frequently, the request will be made with a throttling strategy.</p></li>',3),We=(0,t._)("strong",null,"See also:",-1),Pe=(0,t.Uk)(),Se=(0,t.Uk)("Throttle"),Ie=(0,t._)("h3",{id:"refreshonwindowfocus",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#refreshonwindowfocus","aria-hidden":"true"},"#"),(0,t.Uk)(" refreshOnWindowFocus")],-1),Ee=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Type:"),(0,t.Uk)(),(0,t._)("code",null,"boolean")])],-1),je=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Default:"),(0,t.Uk)(),(0,t._)("code",null,"false")])],-1),Oe=(0,t._)("p",null,[(0,t._)("strong",null,"Details:")],-1),Ae=(0,t.Uk)("When set to "),Fe=(0,t._)("code",null,"true",-1),Be=(0,t.Uk)(", "),Ce={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus",target:"_blank",rel:"noopener noreferrer"},Me=(0,t.Uk)("focus"),Ke=(0,t.Uk)(" and "),Le={href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilitychange_event",target:"_blank",rel:"noopener noreferrer"},ze=(0,t.Uk)("visibilitychange"),Ve=(0,t.Uk)(", the request will be re-initiated."),Ne=(0,t._)("strong",null,"See also:",-1),He=(0,t.Uk)(),Ye=(0,t.Uk)("Refresh On Focus"),Je=(0,t._)("h3",{id:"refocustimespan",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#refocustimespan","aria-hidden":"true"},"#"),(0,t.Uk)(" refocusTimespan")],-1),Qe=(0,t.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>5000</code></p></li><li><p><strong>Details:</strong></p><p>When <a href="#refreshonwindowfocus">refreshOnWindowFocus</a> is set to <code>true</code>, you can limit the execution interval of <a href="#refresh"><code>refresh</code></a> by setting the interval in milliseconds. The default is 5000ms.</p></li>',3),Ge=(0,t._)("strong",null,"See also:",-1),Xe=(0,t.Uk)(),Ze=(0,t.Uk)("RefocusTimespan"),$e=(0,t._)("h3",{id:"cachekey",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#cachekey","aria-hidden":"true"},"#"),(0,t.Uk)(" cacheKey")],-1),en=(0,t.uE)('<li><p><strong>Type:</strong> <code>string</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><ul><li>We will cache every request <a href="#data"><code>data</code></a>, <a href="#error"><code>error</code></a>, <a href="#params"><code>params</code></a>, <a href="#loading"><code>loading</code></a></li><li>If <code>cacheKey</code> is set, VueRequest will cache the current request data. When the next component is initialized, if there is cached data, we will return the cached data first and then send a new request behind the scenes. After the new data is returned, we will trigger the data update and update the cached data again, which is the ability of <strong>SWR</strong>.</li><li>The request for the same cacheKey is shared globally. i.e., you can load data in advance. With this feature, preloading can be easily achieved.</li></ul></li>',3),nn=(0,t._)("strong",null,"See also:",-1),an=(0,t.Uk)(),tn=(0,t.Uk)("Cache / Preload"),sn=(0,t._)("h3",{id:"cachetime",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#cachetime","aria-hidden":"true"},"#"),(0,t.Uk)(" cacheTime")],-1),ln=(0,t.uE)("<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>600000</code></p></li><li><p><strong>Details:</strong></p><p>When the cache is turned on, you can tell us the cache&#39;s expiration time by setting <code>cacheTime</code>. When the cache expires, we will delete it. The default is <strong>600000 milliseconds</strong>, which is 10 minutes.</p></li>",3),on=(0,t._)("strong",null,"See also:",-1),rn=(0,t.Uk)(),pn=(0,t.Uk)("CacheTime"),cn=(0,t._)("h3",{id:"staletime",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#staletime","aria-hidden":"true"},"#"),(0,t.Uk)(" staleTime")],-1),un=(0,t.uE)("<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>0</code></p></li><li><p><strong>Details:</strong></p><p>If you can ensure that the cached data will not be updated in a certain period of time, we recommend that you set a reasonable number of milliseconds.</p><ul><li>The default is <code>0</code>, which means no preservation, and the request will be reissued every time.</li><li>Set to <code>-1</code> means the cache will never expire.</li></ul></li>",3),dn=(0,t._)("strong",null,"See also:",-1),hn=(0,t.Uk)(),gn=(0,t.Uk)("StaleTime"),kn=(0,t._)("h3",{id:"errorretrycount",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#errorretrycount","aria-hidden":"true"},"#"),(0,t.Uk)(" errorRetryCount")],-1),fn=(0,t.uE)("<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>0</code></p></li><li><p><strong>Details:</strong></p><p>Max error retry count</p></li>",3),mn=(0,t._)("strong",null,"See also:",-1),_n=(0,t.Uk)(),yn=(0,t.Uk)("ErrorRetryCount"),vn=(0,t._)("h3",{id:"errorretryinterval",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#errorretryinterval","aria-hidden":"true"},"#"),(0,t.Uk)(" errorRetryInterval")],-1),bn=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Type:"),(0,t.Uk)(),(0,t._)("code",null,"number")])],-1),wn=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Default:"),(0,t.Uk)(),(0,t._)("code",null,"0")])],-1),Un=(0,t._)("p",null,[(0,t._)("strong",null,"Details:")],-1),qn=(0,t.Uk)("By default, VueRequest uses "),Rn={href:"https://en.wikipedia.org/wiki/Exponential_backoff",target:"_blank",rel:"noopener noreferrer"},xn=(0,t._)("strong",null,"Binary Exponential Backoff Algorithm",-1),Dn=(0,t.Uk)(" to help you calculate the appropriate interval time. You can also set "),Tn=(0,t._)("code",null,"errorRetryInterval",-1),Wn=(0,t.Uk)(" to Override default behavior."),Pn=(0,t._)("strong",null,"See also:",-1),Sn=(0,t.Uk)(),In=(0,t.Uk)("ErrorRetryInterval"),En=(0,t._)("h3",{id:"manual",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#manual","aria-hidden":"true"},"#"),(0,t.Uk)(" manual")],-1),jn=(0,t.uE)('<li><p><strong>Type:</strong> <code>boolean</code></p></li><li><p><strong>Default:</strong> <code>false</code></p></li><li><p><strong>Details:</strong></p><p>When <code>manual</code> is set to <code>true</code>, you need to manually trigger <a href="#run"><code>run</code></a> to initiate the request.</p></li>',3),On=(0,t._)("strong",null,"See also:",-1),An=(0,t.Uk)(),Fn=(0,t.Uk)("Manually Trigger"),Bn=(0,t.uE)('<h3 id="defaultparams" tabindex="-1"><a class="header-anchor" href="#defaultparams" aria-hidden="true">#</a> defaultParams</h3><ul><li><p><strong>Type:</strong> <code>P[]</code></p></li><li><p><strong>Default:</strong> <code>[]</code></p></li><li><p><strong>Details:</strong></p><p>If <a href="#manual"><code>manual</code></a> is set to <code>false</code>, when the run is automatically executed, <code>defaultParams</code> will be used as the request parameter.</p></li></ul><h3 id="ready" tabindex="-1"><a class="header-anchor" href="#ready" aria-hidden="true">#</a> ready</h3>',3),Cn=(0,t.uE)('<li><p><strong>Type:</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>Default:</strong> <code>true</code></p></li><li><p><strong>Details:</strong></p><p>Only when <code>ready</code> is <code>true</code> will the request be initiated.</p><ul><li>This behavior is <strong>only triggered once</strong>. If you want to trigger multiple times, it is recommended to use <a href="#refreshdeps"><code>refreshDeps</code></a> or implement the relevant logic yourself.</li></ul></li>',3),Mn=(0,t._)("strong",null,"See also:",-1),Kn=(0,t.Uk)(),Ln=(0,t.Uk)("Dependent Request"),zn=(0,t.uE)('<h3 id="initialdata" tabindex="-1"><a class="header-anchor" href="#initialdata" aria-hidden="true">#</a> initialData</h3><ul><li><p><strong>Type:</strong> <code>R</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><p>Initialized <a href="#data"><code>data</code></a>.</p></li></ul><h3 id="refreshdeps" tabindex="-1"><a class="header-anchor" href="#refreshdeps" aria-hidden="true">#</a> refreshDeps</h3>',3),Vn=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Type:"),(0,t.Uk)(),(0,t._)("code",null,"WatchSource<any>[]")])],-1),Nn=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"Default:"),(0,t.Uk)(),(0,t._)("code",null,"[]")])],-1),Hn=(0,t._)("p",null,[(0,t._)("strong",null,"Details:")],-1),Yn=(0,t.Uk)("The change of "),Jn=(0,t._)("code",null,"refreshDeps",-1),Qn=(0,t.Uk)(" will trigger the re-execution of "),Gn=(0,t._)("code",null,"refresh",-1),Xn=(0,t.Uk)(". Its essence is just an encapsulation of "),Zn={href:"https://v3.vuejs.org/guide/computed.html#watchers",target:"_blank",rel:"noopener noreferrer"},$n=(0,t._)("code",null,"watch",-1),ea=(0,t.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">watch</span><span class="token punctuation">(</span>refreshDeps<span class="token punctuation">,</span> refresh<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',1),na=(0,t._)("strong",null,"See also:",-1),aa=(0,t.Uk)(),ta=(0,t.Uk)("Dependency Refresh"),sa=(0,t._)("h3",{id:"querykey",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#querykey","aria-hidden":"true"},"#"),(0,t.Uk)(" queryKey")],-1),la=(0,t.uE)('<li><p><strong>Type:</strong> <code>(...params: P[]) =&gt; string</code></p></li><li><p><strong>Details:</strong></p><p>According to params, get the <strong>key</strong> of the current request. After setting, we will maintain the request status with different <strong>key</strong> values in <a href="#queries"><code>queries</code></a> at the same time.</p></li>',2),oa=(0,t._)("strong",null,"See also:",-1),ra=(0,t.Uk)(),ia=(0,t.Uk)("Concurrent Request"),pa=(0,t.uE)('<h3 id="formatresult" tabindex="-1"><a class="header-anchor" href="#formatresult" aria-hidden="true">#</a> formatResult</h3><ul><li><p><strong>Type:</strong> <code>(data: R) =&gt; FR</code></p></li><li><p><strong>Details:</strong></p><p>Format the request result, the input parameter is the <code>data</code> returned by the original interface, and the output parameter is the processed <code>data</code>.</p><div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;api/timestramp&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">formatResult</span><span class="token operator">:</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div></li></ul><h3 id="onsuccess" tabindex="-1"><a class="header-anchor" href="#onsuccess" aria-hidden="true">#</a> onSuccess</h3><ul><li><p><strong>Type:</strong> <code>(data: R, params: P[]) =&gt; void</code></p></li><li><p><strong>Details:</strong></p><p>Triggered when <a href="#service">Service</a> <code>resolve</code>, the parameters are <a href="#data"><code>data</code></a> and <a href="#params"><code>params</code></a>.</p><ul><li>If there is <a href="#formatresult"><code>formatResult</code></a>, then <a href="#data"><code>data</code></a> is the formatted data.</li></ul></li></ul><h3 id="onerror" tabindex="-1"><a class="header-anchor" href="#onerror" aria-hidden="true">#</a> onError</h3><ul><li><p><strong>Type:</strong> <code>(error: Error, params: P[]) =&gt; void</code></p></li><li><p><strong>Details:</strong></p><p>Triggered when <a href="#service">Service</a> <code>reject</code>, the parameters are <a href="#error"><code>error</code></a> and <a href="#params"><code>params</code></a>.</p></li></ul><h3 id="onbefore" tabindex="-1"><a class="header-anchor" href="#onbefore" aria-hidden="true">#</a> onBefore</h3><ul><li><p><strong>Type:</strong> <code>(params: P[]) =&gt; void</code></p></li><li><p><strong>Details:</strong></p><p>Triggered before <a href="#service">Service</a> request, the parameters is <a href="#params"><code>params</code></a>.</p></li></ul><h3 id="onafter" tabindex="-1"><a class="header-anchor" href="#onafter" aria-hidden="true">#</a> onAfter</h3><ul><li><p><strong>Type:</strong> <code>(params: P[]) =&gt; void</code></p></li><li><p><strong>Details:</strong></p><p>Triggered after <a href="#service">Service</a> request, the parameters is <a href="#params"><code>params</code></a>.</p></li></ul>',10),ca={render:function(e,n){const a=(0,t.up)("Badge"),ca=(0,t.up)("OutboundLink"),ua=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[s,(0,t._)("h3",l,[o,r,(0,t.Wm)(a,{text:"New in 1.2.0"})]),i,(0,t._)("ul",null,[p,(0,t._)("li",null,[c,u,(0,t._)("div",d,[h,(0,t._)("p",null,[g,k,(0,t._)("a",f,[m,(0,t.Wm)(ca)]),_])]),y]),(0,t._)("li",null,[(0,t._)("p",null,[v,b,(0,t.Wm)(ua,{to:"/guide/documentation/queries.html"},{default:(0,t.w5)((()=>[w])),_:1})])])]),U,(0,t._)("ul",null,[q,(0,t._)("li",null,[(0,t._)("p",null,[R,x,(0,t.Wm)(ua,{to:"/guide/documentation/mutation.html"},{default:(0,t.w5)((()=>[D])),_:1})])])]),T,(0,t._)("p",null,[W,(0,t.Wm)(ua,{to:"/guide/documentation/dataFetching.html"},{default:(0,t.w5)((()=>[P])),_:1})]),S,(0,t._)("ul",null,[I,(0,t._)("li",null,[E,(0,t._)("p",null,[j,O,A,(0,t._)("a",F,[B,(0,t.Wm)(ca)]),C,M,K])])]),L,(0,t._)("ul",null,[z,(0,t._)("li",null,[V,(0,t._)("p",null,[N,H,Y,(0,t._)("a",J,[Q,(0,t.Wm)(ca)]),G,X,Z,$,ee])])]),ne,ae,(0,t._)("ul",null,[te,(0,t._)("li",null,[(0,t._)("p",null,[se,le,(0,t.Wm)(ua,{to:"/guide/documentation/loadingDelay.html"},{default:(0,t.w5)((()=>[oe])),_:1})])])]),re,(0,t._)("ul",null,[ie,(0,t._)("li",null,[(0,t._)("p",null,[pe,ce,(0,t.Wm)(ua,{to:"/guide/documentation/polling.html"},{default:(0,t.w5)((()=>[ue])),_:1})])])]),de,(0,t._)("ul",null,[he,(0,t._)("li",null,[(0,t._)("p",null,[ge,ke,(0,t.Wm)(ua,{to:"/guide/documentation/polling.html#pollingwhenhidden"},{default:(0,t.w5)((()=>[fe])),_:1})])])]),me,(0,t._)("ul",null,[_e,(0,t._)("li",null,[(0,t._)("p",null,[ye,ve,(0,t.Wm)(ua,{to:"/guide/documentation/polling.html#pollingwhenoffline"},{default:(0,t.w5)((()=>[be])),_:1})])])]),we,(0,t._)("ul",null,[Ue,(0,t._)("li",null,[(0,t._)("p",null,[qe,Re,(0,t.Wm)(ua,{to:"/guide/documentation/debounce.html"},{default:(0,t.w5)((()=>[xe])),_:1})])])]),De,(0,t._)("ul",null,[Te,(0,t._)("li",null,[(0,t._)("p",null,[We,Pe,(0,t.Wm)(ua,{to:"/guide/documentation/throttle.html"},{default:(0,t.w5)((()=>[Se])),_:1})])])]),Ie,(0,t._)("ul",null,[Ee,je,(0,t._)("li",null,[Oe,(0,t._)("p",null,[Ae,Fe,Be,(0,t._)("a",Ce,[Me,(0,t.Wm)(ca)]),Ke,(0,t._)("a",Le,[ze,(0,t.Wm)(ca)]),Ve])]),(0,t._)("li",null,[(0,t._)("p",null,[Ne,He,(0,t.Wm)(ua,{to:"/guide/documentation/refresh-on-window-focus.html"},{default:(0,t.w5)((()=>[Ye])),_:1})])])]),Je,(0,t._)("ul",null,[Qe,(0,t._)("li",null,[(0,t._)("p",null,[Ge,Xe,(0,t.Wm)(ua,{to:"/guide/documentation/refresh-on-window-focus.html#refocustimespan"},{default:(0,t.w5)((()=>[Ze])),_:1})])])]),$e,(0,t._)("ul",null,[en,(0,t._)("li",null,[(0,t._)("p",null,[nn,an,(0,t.Wm)(ua,{to:"/guide/documentation/cacheKey.html"},{default:(0,t.w5)((()=>[tn])),_:1})])])]),sn,(0,t._)("ul",null,[ln,(0,t._)("li",null,[(0,t._)("p",null,[on,rn,(0,t.Wm)(ua,{to:"/guide/documentation/cacheKey.html#cachetime"},{default:(0,t.w5)((()=>[pn])),_:1})])])]),cn,(0,t._)("ul",null,[un,(0,t._)("li",null,[(0,t._)("p",null,[dn,hn,(0,t.Wm)(ua,{to:"/guide/documentation/cacheKey.html#staletime"},{default:(0,t.w5)((()=>[gn])),_:1})])])]),kn,(0,t._)("ul",null,[fn,(0,t._)("li",null,[(0,t._)("p",null,[mn,_n,(0,t.Wm)(ua,{to:"/guide/documentation/errorRetry.html#errorretrycount"},{default:(0,t.w5)((()=>[yn])),_:1})])])]),vn,(0,t._)("ul",null,[bn,wn,(0,t._)("li",null,[Un,(0,t._)("p",null,[qn,(0,t._)("a",Rn,[xn,(0,t.Wm)(ca)]),Dn,Tn,Wn])]),(0,t._)("li",null,[(0,t._)("p",null,[Pn,Sn,(0,t.Wm)(ua,{to:"/guide/documentation/errorRetry.html#errorretryinterval"},{default:(0,t.w5)((()=>[In])),_:1})])])]),En,(0,t._)("ul",null,[jn,(0,t._)("li",null,[(0,t._)("p",null,[On,An,(0,t.Wm)(ua,{to:"/guide/documentation/manual.html"},{default:(0,t.w5)((()=>[Fn])),_:1})])])]),Bn,(0,t._)("ul",null,[Cn,(0,t._)("li",null,[(0,t._)("p",null,[Mn,Kn,(0,t.Wm)(ua,{to:"/guide/documentation/ready.html"},{default:(0,t.w5)((()=>[Ln])),_:1})])])]),zn,(0,t._)("ul",null,[Vn,Nn,(0,t._)("li",null,[Hn,(0,t._)("p",null,[Yn,Jn,Qn,Gn,Xn,(0,t._)("a",Zn,[$n,(0,t.Wm)(ca)])]),ea]),(0,t._)("li",null,[(0,t._)("p",null,[na,aa,(0,t.Wm)(ua,{to:"/guide/documentation/refreshDeps.html"},{default:(0,t.w5)((()=>[ta])),_:1})])])]),sa,(0,t._)("ul",null,[la,(0,t._)("li",null,[(0,t._)("p",null,[oa,ra,(0,t.Wm)(ua,{to:"/guide/documentation/queries.html"},{default:(0,t.w5)((()=>[ia])),_:1})])])]),pa],64)}}},63535:(e,n,a)=>{a.r(n),a.d(n,{data:()=>t});const t={key:"v-744497ce",path:"/api/",title:"Public API",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Return Values",slug:"return-values",children:[{level:3,title:"data",slug:"data",children:[]},{level:3,title:"loading",slug:"loading",children:[]},{level:3,title:"reloading",slug:"reloading",children:[]},{level:3,title:"params",slug:"params",children:[]},{level:3,title:"error",slug:"error",children:[]},{level:3,title:"queries",slug:"queries",children:[]},{level:3,title:"run",slug:"run",children:[]},{level:3,title:"cancel",slug:"cancel",children:[]},{level:3,title:"refresh",slug:"refresh",children:[]},{level:3,title:"reload",slug:"reload",children:[]},{level:3,title:"mutate",slug:"mutate",children:[]}]},{level:2,title:"Service",slug:"service",children:[{level:3,title:"Request Method",slug:"request-method",children:[]},{level:3,title:"String",slug:"string",children:[]},{level:3,title:"Object",slug:"object",children:[]}]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"loadingDelay",slug:"loadingdelay",children:[]},{level:3,title:"pollingInterval",slug:"pollinginterval",children:[]},{level:3,title:"pollingWhenHidden",slug:"pollingwhenhidden",children:[]},{level:3,title:"pollingWhenOffline",slug:"pollingwhenoffline",children:[]},{level:3,title:"debounceInterval",slug:"debounceinterval",children:[]},{level:3,title:"throttleInterval",slug:"throttleinterval",children:[]},{level:3,title:"refreshOnWindowFocus",slug:"refreshonwindowfocus",children:[]},{level:3,title:"refocusTimespan",slug:"refocustimespan",children:[]},{level:3,title:"cacheKey",slug:"cachekey",children:[]},{level:3,title:"cacheTime",slug:"cachetime",children:[]},{level:3,title:"staleTime",slug:"staletime",children:[]},{level:3,title:"errorRetryCount",slug:"errorretrycount",children:[]},{level:3,title:"errorRetryInterval",slug:"errorretryinterval",children:[]},{level:3,title:"manual",slug:"manual",children:[]},{level:3,title:"defaultParams",slug:"defaultparams",children:[]},{level:3,title:"ready",slug:"ready",children:[]},{level:3,title:"initialData",slug:"initialdata",children:[]},{level:3,title:"refreshDeps",slug:"refreshdeps",children:[]},{level:3,title:"queryKey",slug:"querykey",children:[]},{level:3,title:"formatResult",slug:"formatresult",children:[]},{level:3,title:"onSuccess",slug:"onsuccess",children:[]},{level:3,title:"onError",slug:"onerror",children:[]},{level:3,title:"onBefore",slug:"onbefore",children:[]},{level:3,title:"onAfter",slug:"onafter",children:[]}]}],filePathRelative:"api/index.md",git:{updatedTime:1631095383e3,contributors:[{name:"John",email:"John60676@qq.com",commits:1}]}}}}]);