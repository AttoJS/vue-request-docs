"use strict";(self.webpackChunken=self.webpackChunken||[]).push([[40],{79291:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const e=(0,a(27875).uE)('<h2 id="detailed-changes" tabindex="-1"><a class="header-anchor" href="#detailed-changes" aria-hidden="true">#</a> Detailed changes</h2><ul><li><p>Use <code>vue-demi</code> to be compatible with vue2.</p></li><li><p>Add <code>getCache</code> 、<code>setCache</code> 、 <code>clearCache</code>.</p></li><li><p>When caching is enabled, requests with the same <code>cacheKey</code> set will be reused.</p></li><li><p>Add <code>runAsync</code> and <code>refreshAsync</code>, the original run no longer returns Promise.</p></li><li><p>Add <code>definePlugin</code> to extend the <code>useReuqest</code>.</p></li><li><p>In <code>debounce/throttle</code> mode, <code>runAsync</code> can return current Promise.</p></li><li><p>Add <code>useRequestProvider</code> to inject the options.</p></li><li><p>Add <code>refreshDepsAction</code> option to customize the behavior after <code>refreshDeps</code> is triggered.</p></li><li><p>Add <code>loadingKeep</code>.</p></li><li><p><code>refreshDepsAction</code> 在 <code>manual=true</code> 时，也会被 <code>refreshDeps</code> 的改变而触发。</p></li><li><p><strong>The request library is no longer integrated by default, and service no longer supports string or object.</strong></p></li><li><p><strong>Remove <code>formatResult</code>.</strong> <a href="#1">Migration help</a></p></li><li><p><strong>Remove <code>queryKey</code>, that is, deleted concurrent request.</strong> <a href="#2">Migration help</a></p></li><li><p><strong><code>run</code> no longer returns Promise</strong> <a href="#3">Migration help</a></p></li><li><p><strong><code>data</code> is no longer emptied when a request fails</strong></p></li><li><p><strong>Upgraded <code>ready</code> behavior</strong></p></li><li><p><strong><code>data</code> and <code>error</code> changed to <code>shallowRef</code></strong></p></li><li><p><strong><code>usePagination</code> removes the <code>reload</code> method and <code>reloading</code>. If you need the corresponding requirements, you can implement it yourself.</strong></p></li><li><p><strong>Remove <code>RequestConfig</code> component.</strong> <a href="#4">Migration help</a></p></li><li><p><strong>Refactored <code>useLoadMore</code>.</strong> <a href="#useloadmore-api">see also</a></p></li><li><p><strong><code>cacheKey</code> Support passing in functions: <code>cacheKey: (params?: P) =&gt; string</code></strong></p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token function">useRequest</span><span class="token punctuation">(</span>getUser<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  cacheKey<span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">user-key-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div></li><li><p>Some <code>options</code> support reactive as follows</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReactivityOptions</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  loadingDelay<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  pollingInterval<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  debounceInterval<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  debounceOptions<span class="token operator">:</span> DebounceOptions <span class="token operator">|</span> Reactive<span class="token operator">&lt;</span>DebounceOptions<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  throttleInterval<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  throttleOptions<span class="token operator">:</span> ThrottleOptions <span class="token operator">|</span> Reactive<span class="token operator">&lt;</span>ThrottleOptions<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  refreshOnWindowFocus<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  refocusTimespan<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  errorRetryCount<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  errorRetryInterval<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div></li></ul><h2 id="migration-help" tabindex="-1"><a class="header-anchor" href="#migration-help" aria-hidden="true">#</a> Migration help</h2><ol><li><code>formatResult</code> is deleted, and the service is expected to return the data in the final format. for example: <a name="1"></a></li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;api/user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// Process the final data here</span>\n  <span class="token keyword">return</span> results<span class="token punctuation">.</span>data<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><ol start="2"><li><p>The original concurrent mode of <code>queryKey</code> is deleted. It is expected that each request action and UI will be encapsulated as a component instead of placing all requests in the parent. <a name="2"></a></p></li><li><p><code>run</code> no longer returns a <code>Promise</code>. use <code>runAsync</code> instead of the original <code>run</code>. <a name="3"></a></p></li><li><p>Can be wrapped by <code>useRequestProvider</code> by yourself. <a name="4"></a></p></li></ol>',6),t={},o=(0,a(94407).Z)(t,[["render",function(n,s){return e}]])},47750:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-d0112c92",path:"/guide/migration.html",title:"Migration from v1",lang:"en-US",frontmatter:{title:"Migration from v1",head:[["meta",{name:"og:title",content:"Migration from v1 - VueRequest"}]]},excerpt:"",headers:[{level:2,title:"Detailed changes",slug:"detailed-changes",children:[]},{level:2,title:"Migration help",slug:"migration-help",children:[]}],filePathRelative:"guide/migration.md",git:{updatedTime:1686191886e3,contributors:[{name:"John",email:"John60676@qq.com",commits:1}]}}}}]);